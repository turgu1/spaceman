Procédure de déploiement initial de Spaceman.

Une fois les deux ordinateurs configurés (appserv et appdev) il est maintenant possible d'effectuer l'installation des applications.

La procédure ci-dessous est spécifique au déploiement initial de l'application Spaceman. Il est nécessaire de suivre les étapes indiquées.

1. Aviser les utilisateurs que l'application spaceman sera mise à niveau vers un nouveau serveur et qu'un prochain courriel leur fournira les indications sur comment se connecter à nouveau. Leur indiquer le moment où le changement s'effectuera (leur laisser au moins 24 heures d'avis pour leur permettre de compléter des changements). Leur indiquer également que toutes les données auront migrées sur le nouveau serveur.

2. Une fois arrivé au moment indiqué aux usagers pour faire le transfert, il est nécessaire de stopper l'accès à l'application Spaceman. Pour ce faire, sur le serveur sds-bib, se connecter comme administrateur et stopper le service unicorn de spaceman:

   [ On est dans sds-bib dans un compte admin ]

	 Effectuer la commande suivant:

	 $ ls /etc/init.d

	 Il devrait y avoir un fichier dont le nom débute par unicorn_spaceman... Noter le nom et l'utiliser pour exécuter la commande suivante:

   $ sudo service unicorn_spaceman... stop

3. On doit maintenant récupérer une copie des données en production sur le serveur courant (sds-bib). Elles sont composées de trois éléments: 1) des données localisées dans postgresql, 2) des données dans une arborescence de fichiers et 3) un fichier contenant la version de migration de la bd. 

Pour ce faire, effectuer les commandes suivantes:

   [ On est dans userdev@appdev]

   Il faut copier le fichier Dev/spaceman/src/retrieve-old-data.sh dans le compte admin sur sds-bib avec une commande similaire à la suivante:

     $ scp ~/Dev/spaceman/src/retrieve-old-data.sh super@sds-bib:.

   Dans cette commande, remplacer 'super' par le nom du compte admin et 'sds-bib' par son nom du DNS ou son adresse IP.

   [ On est dans sds-bib dans un compte admin via ssh ]

	 $ ./retrieve-old-data.sh spaceman

   On peut maintenant copier vers appdev le fichier contenant les données:

	$ scp spaceman_data_old_production.tar.gz userdev@appdev:Dev

   Vérifier que le fichier résultat de la copie (commande scp) a bien été transmis dans le répertoire ~/Dev sur userdev@appdev.

4. Se connecter sur userdev@appdev

5. Générer un fichier secrets.yml

   Ce fichier est nécessaire pour rails et ne doit pas être divulgué. Comme il n'est pas présent dans les archives git, il faut le générer. Il doit être localisé dans le répertoire Dev/spaceman/config. Voici un exemple de contenu (les lignes [début] et [fin] n'en font pas partie):

   [début]
   production:
     secret_key_base: c6d97d31c71315308119361e48901a1fb7d8f0d9df528702937502y35070357321562ed37172ba89c012e482cd4eed815fa568f83daf87f4d8906bb8acfc9c9
   [fin]

   Pour se faire, un script générera automatiquement ce fichier. Le seed sera généré dans le script par un appel à la commande ruby "SecureRandom.hex(64)":

   $ cd ~/Dev/spaceman
   $ ./src/set-secret.sh

6. Staging: Effectuer les commandes suivantes:

   Le staging permet de vérifier que tout fonctionne correctement avant d'effectuer le même processus pour l'environnement de production.

   $ cap staging setup     <--- sera beaucoup plus court que pour spaceman

     Si tout c'est bien déroulé, les dernières lignes à l'écran devraient ressembler à ceci:

        00:04 secrets_yml:setup
              01 mkdir -pv /home/stageuser/apps/spaceman/shared/config
            ✔ 01 stageuser@appdev 0.008s

     Sinon, il faudra corriger le problème selon les informations apparaissant à l'écran et relancer la commande "cap staging setup".

   Ensuite, on procède au déploiement:

   $ cp ../spaceman_data_old_production.tar.gz .
   $ cap staging deploy    <--- assez verbeux et assez long

     Si tout c'est bien déroulé, les dernières lignes à l'écran devraient ressembler à ceci:

        00:31 deploy:log_revision
              01 echo "Branch master (at ecc300d873ae98a38a627af0ccbc30be6df94895) deployed as release 20180607142139 by …
            ✔ 01 stageuser@appdev 0.050s

     Sinon, il faudra corriger le problème selon les informations apparaissant à l'écran. Il sera ensuite nécessaire de "purger" la base de données en effectuant les commandes suivantes:

        $ sudo -u postgres psql
        DROP DATABASE spaceman_production;
        CREATE DATABASE spaceman_production WITH OWNER spaceman;
        \connect spaceman_production
        CREATE EXTENSION hstore;
        \quit

     On peut reprendre le déploiement avec les commandes suivantes:

     $ cp ../spaceman_data_old_production.tar.gz .
     $ cap staging deploy


   Le staging permet de vérifier que tout fonctionne correctement avant d'effectuer le même processus pour l'environnement de production.

   $ cap staging setup          <--- sera très long et très verbeux

   $ cp ../spaceman_data_old_production.tar.gz .
   $ cap staging deploy         <--- assez verbeux et moins long

7. L'outil capistrano produit un fichier log situé dans Dev/spaceman/log/capistrano.log . Il serait utile de le parcourir pour voir s'il y a eu des erreurs d'exécution.

8. Si tout s'est bien déroulé, il devrait être possible de se connecter à la nouvelle application en staging par l'entremise d'un fureteur web en utilisant l'url https://appdev:4577

   Demander à un ou des utilisateurs de spaceman d'effectuer quelques essais avec la version en staging (https://appdev:4577) afin de s'assurer que le tout fonctionne bien. Leur mentionner qu'il s'agit d'un test et que la nouvelle version sur le bon serveur leur sera communiqué sous peu. Ils devront autoriser le site dans le fureteur étant donné le certificat bidon.

9. Production: Effectuer les commandes suivantes:

   Voir le paragraphe 6 pour la résolution de problèmes avec les commandes qui suivent. Comme le serveur de production est remote, il faudra se connecter sur le serveur pour effectuer les commandes de réparation de la bd et revenir sur appdev pour la suite.

   $ rm log/capistrano.log
   $ cap production setup        <--- sera très long et très verbeux

   $ cp ../spaceman_data_old_production.tar.gz .
   $ cap production deploy       <--- assez verbeux et moins long

10. L'outil capistrano produit un fichier log situé dans Dev/spaceman/log/capistrano.log . Il serait utile de le parcourir pour voir s'il y a eu des erreurs d'exécution.

11. Si tout s'est bien déroulé, il devrait être possible de se connecter à la nouvelle application en production par l'entremise d'un fureteur web en utilisant l'URL https://appserv:4577

12. Détruire le fichier capistrano.log car celui-ci contiens des traces d'exécution entourant le mot de passe généré pour l'utilisateur spaceman sous Postgresql:

    $ rm log/capistrano.log
    
13. Il est maintenant temps d'aviser les utilisateur que la nouvelle version de l'application est maintenant opérationnelle. 

   L'URL est https://appserv:4577
   
   --> Ils devront autoriser le site dans le fureteur étant donné le certificat bidon.